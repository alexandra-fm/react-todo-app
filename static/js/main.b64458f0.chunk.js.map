{"version":3,"sources":["components/AppHeader/index.js","components/AppHeader/AppHeader.js","components/SearchPanel/SearchPanel.js","components/SearchPanel/index.js","components/TodoListItem/TodoListItem.js","components/TodoListItem/index.js","components/TodoList/index.js","components/TodoList/TodoList.js","components/ItemStatusFilter/ItemStatusFilter.js","components/ItemStatusFilter/index.js","components/ItemAddForm/ItemAddForm.js","components/ItemAddForm/index.js","components/App/App.js","components/App/index.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","event","target","value","setState","props","type","placeholder","onChange","this","Component","TodoListItem","label","onDeletedItem","onToggleImportant","onToggleDone","important","onClick","xmlns","width","height","fill","viewBox","d","TodoList","todos","elements","map","item","id","itemProps","ItemStatusFilter","buttons","name","filter","onFilterChange","setClass","ItemAddForm","onSubmit","preventDefault","onAddedItem","onLabelAdd","App","maxId","todoData","createTodoItem","searchChange","filterChange","deletItem","idx","findIndex","el","before","slice","after","addItem","newItem","toggleProperty","arr","propName","oldItem","toggleImportant","toggleDone","items","length","toLowerCase","includes","visibleItems","search","doneCount","todoCount","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.b64458f0.chunk.js","sourcesContent":["import AppHeader from \"./AppHeader\"\r\n\r\nexport default AppHeader\r\n","import React from \"react\"\r\n\r\nimport \"./AppHeader.css\"\r\n\r\nconst AppHeader = ({ toDo, done }) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>Todo List</h1>\r\n      <h2>\r\n        {toDo} more to do, {done} done\r\n      </h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppHeader\r\n","import React, { Component } from \"react\"\r\n\r\nimport \"./SearchPanel.css\"\r\n\r\nexport default class SearchPanel extends Component {\r\n  state = {\r\n    term: \"\",\r\n  }\r\n\r\n  onSearchChange = event => {\r\n    const term = event.target.value\r\n    this.setState({ term })\r\n    this.props.onSearchChange(term)\r\n  }\r\n  event\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control search-input\"\r\n        placeholder=\"type to search\"\r\n        onChange={this.onSearchChange}\r\n        value={this.state.term}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import SearchPanel from \"./SearchPanel\"\r\n\r\nexport default SearchPanel\r\n","import React, { Component } from \"react\"\r\n\r\nimport \"./TodoListItem.css\"\r\n\r\nexport default class TodoListItem extends Component {\r\n  render() {\r\n    const {\r\n      label,\r\n      onDeletedItem,\r\n      onToggleImportant,\r\n      onToggleDone,\r\n      important,\r\n      done,\r\n    } = this.props\r\n\r\n    let className = \"todo-list-item\"\r\n    if (done) {\r\n      className += \" done\"\r\n    }\r\n\r\n    if (important) {\r\n      className += \" important\"\r\n    }\r\n\r\n    return (\r\n      <span className={className}>\r\n        <span className=\"todo-list-item-label\" onClick={onToggleDone}>\r\n          {label}\r\n        </span>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-success btn-sm float-end\"\r\n          onClick={onToggleImportant}\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            fill=\"currentColor\"\r\n            className=\"bi bi-exclamation\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path d=\"M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.553.553 0 0 1-1.1 0L7.1 4.995z\" />\r\n          </svg>\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-danger btn-sm float-end\"\r\n          onClick={onDeletedItem}\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            fill=\"currentColor\"\r\n            className=\"bi bi-trash\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n            <path\r\n              fill-rule=\"evenodd\"\r\n              d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n            />\r\n          </svg>\r\n        </button>\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\n/* const TodoListItemFunc = ({ label, important = false }) => {\r\n  const style = {\r\n    color: important ? \"steelblue\" : \"black\",\r\n    fontWeight: important ? \"bold\" : \"normal\",\r\n  }\r\n\r\n  return (\r\n    <span className=\"todo-list-item\">\r\n      <span className=\"todo-list-item-label\" style={style}>\r\n        {label}\r\n      </span>\r\n\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-success btn-sm float-end\"\r\n      >\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"16\"\r\n          height=\"16\"\r\n          fill=\"currentColor\"\r\n          className=\"bi bi-exclamation\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.553.553 0 0 1-1.1 0L7.1 4.995z\" />\r\n        </svg>\r\n      </button>\r\n\r\n      <button type=\"button\" className=\"btn btn-outline-danger btn-sm float-end\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"16\"\r\n          height=\"16\"\r\n          fill=\"currentColor\"\r\n          className=\"bi bi-trash\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n          <path\r\n            fill-rule=\"evenodd\"\r\n            d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n          />\r\n        </svg>\r\n      </button>\r\n    </span>\r\n  )\r\n} */\r\n","import TodoListItem from \"./TodoListItem\"\r\n\r\nexport default TodoListItem\r\n","import TodoList from \"./TodoList\"\r\n\r\nexport default TodoList\r\n","import React from \"react\"\r\n\r\nimport TodoListItem from \"../TodoListItem\"\r\n\r\nimport \"./TodoList.css\"\r\n\r\nconst TodoList = ({\r\n  todos,\r\n  onDeletedItem,\r\n  onToggleImportant,\r\n  onToggleDone,\r\n}) => {\r\n  const elements = todos.map(item => {\r\n    const { id, ...itemProps } = item\r\n\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        {/*Вариант 1: <TodoListItem label={item.label} imortant={item.imortant} /> */}\r\n        <TodoListItem\r\n          {...itemProps}\r\n          onDeletedItem={() => onDeletedItem(id)}\r\n          onToggleImportant={() => onToggleImportant(id)}\r\n          onToggleDone={() => onToggleDone(id)}\r\n        />\r\n      </li>\r\n    )\r\n  })\r\n\r\n  return <ul className=\"list-group todo-list\">{elements}</ul>\r\n}\r\n\r\nexport default TodoList\r\n","import React, { Component } from \"react\"\r\n\r\nimport \"./ItemStatusFilter.css\"\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n  buttons = [\r\n    { name: \"all\", label: \"All\" },\r\n    { name: \"active\", label: \"Active\" },\r\n    { name: \"done\", label: \"Done\" },\r\n  ]\r\n\r\n  //btn-info btn-outline-secondary\r\n\r\n  render() {\r\n    const { filter, onFilterChange } = this.props\r\n\r\n    const buttons = this.buttons.map(({ name, label }) => {\r\n      const isActive = filter === name\r\n      const setClass = isActive ? \"btn-info\" : \"btn-outline-secondary\"\r\n\r\n      return (\r\n        <button\r\n          key={name}\r\n          type=\"button\"\r\n          className={`btn ${setClass}`}\r\n          onClick={() => onFilterChange(name)}\r\n        >\r\n          {label}\r\n        </button>\r\n      )\r\n    })\r\n\r\n    return <div className=\"btn-group\">{buttons}</div>\r\n  }\r\n}\r\n","import ItemStatusFilter from \"./ItemStatusFilter\"\r\n\r\nexport default ItemStatusFilter\r\n","import React, { Component } from \"react\"\r\n\r\nimport \"./ItemAddForm.css\"\r\n\r\nexport default class ItemAddForm extends Component {\r\n  state = {\r\n    label: \"\",\r\n  }\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault()\r\n    this.props.onAddedItem(this.state.label)\r\n    this.setState({\r\n      label: \"\",\r\n    })\r\n  }\r\n\r\n  onLabelAdd = event => {\r\n    this.setState({\r\n      label: event.target.value,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"item-add-form d-flex\" onSubmit={this.onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"What needs to be done\"\r\n          onChange={this.onLabelAdd}\r\n          value={this.state.label}\r\n        />\r\n        <button className=\"btn btn-outline-secondary\">Add Item</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n","import ItemAddForm from \"./ItemAddForm\"\r\n\r\nexport default ItemAddForm\r\n","import React, { Component } from \"react\"\r\n\r\nimport AppHeader from \"../AppHeader\"\r\nimport SearchPanel from \"../SearchPanel\"\r\nimport TodoList from \"../TodoList\"\r\nimport ItemStatusFilter from \"../ItemStatusFilter\"\r\nimport ItemAddForm from \"../ItemAddForm\"\r\n\r\nimport \"./App.css\"\r\n\r\nexport default class App extends Component {\r\n  maxId = 1\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem(\"Drink Coffee\"),\r\n      this.createTodoItem(\"Build React App\"),\r\n      this.createTodoItem(\"Have a lunch\"),\r\n    ],\r\n    term: \"\",\r\n    filter: \"all\",\r\n  }\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: this.maxId++,\r\n    }\r\n  }\r\n\r\n  search(items, term) {\r\n    if (term.length === 0) return items\r\n\r\n    return items.filter(item => {\r\n      return item.label.toLowerCase().includes(term.toLowerCase())\r\n    })\r\n  }\r\n\r\n  searchChange = term => {\r\n    this.setState({ term })\r\n  }\r\n\r\n  filter(items, filter) {\r\n    switch (filter) {\r\n      case \"all\":\r\n        return items\r\n      case \"active\":\r\n        return items.filter(item => !item.done)\r\n      case \"done\":\r\n        return items.filter(item => item.done)\r\n      default:\r\n        return items\r\n    }\r\n  }\r\n\r\n  filterChange = filter => {\r\n    this.setState({ filter })\r\n  }\r\n\r\n  deletItem = id => {\r\n    this.setState(({ todoData }) => {\r\n      const idx = todoData.findIndex(el => el.id === id)\r\n\r\n      const before = todoData.slice(0, idx)\r\n      const after = todoData.slice(idx + 1)\r\n\r\n      const newArray = [...before, ...after]\r\n\r\n      return {\r\n        todoData: newArray,\r\n      }\r\n    })\r\n  }\r\n\r\n  addItem = label => {\r\n    const newItem = this.createTodoItem(label)\r\n    this.setState(({ todoData }) => {\r\n      const newArray = [...todoData, newItem]\r\n      return {\r\n        todoData: newArray,\r\n      }\r\n    })\r\n  }\r\n\r\n  toggleProperty = (arr, id, propName) => {\r\n    const idx = arr.findIndex(el => el.id === id)\r\n\r\n    const oldItem = arr[idx]\r\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] }\r\n\r\n    const before = arr.slice(0, idx)\r\n    const after = arr.slice(idx + 1)\r\n\r\n    return [...before, newItem, ...after]\r\n  }\r\n\r\n  toggleImportant = id => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, \"important\"),\r\n      }\r\n    })\r\n  }\r\n\r\n  toggleDone = id => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, \"done\"),\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { todoData, term, filter } = this.state\r\n\r\n    const visibleItems = this.filter(this.search(todoData, term), filter)\r\n    const doneCount = todoData.filter(el => el.done).length\r\n    const todoCount = todoData.length - doneCount\r\n\r\n    return (\r\n      <div className=\"todo-app\">\r\n        <AppHeader toDo={todoCount} done={doneCount} />\r\n\r\n        <div className=\"top-panel d-flex\">\r\n          <SearchPanel onSearchChange={this.searchChange} />\r\n          <ItemStatusFilter\r\n            filter={filter}\r\n            onFilterChange={this.filterChange}\r\n          />\r\n        </div>\r\n\r\n        <TodoList\r\n          todos={visibleItems}\r\n          onDeletedItem={this.deletItem}\r\n          onToggleImportant={this.toggleImportant}\r\n          onToggleDone={this.toggleDone}\r\n        />\r\n        <ItemAddForm onAddedItem={this.addItem} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import App from \"./App\"\r\n\r\nexport default App\r\n","import React from \"react\"\nimport ReactDom from \"react-dom\"\n\nimport App from \"./components/App\"\n\nReactDom.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}